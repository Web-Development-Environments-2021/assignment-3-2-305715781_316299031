---
openapi: 3.0.0
info:
  title: api
  description: API for  project
  version: 1.0.0
servers:
- url: /
tags:
- name: Users
- name: Auth
- name: League
- name: Players
- name: Teams
- name: Games
paths:
  /Register:
    post:
      tags:
      - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
      - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description: |
            User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
      - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: the user has ben successfully logged out
  /league/getDetails:
    get:
      tags:
      - league
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/League'
        "400":
          description: wrong input parameters
  /users/favoritePlayers:
    get:
      tags:
      - Users
      - Players
      summary: Return the favorite players that were saved by user
      responses:
        "200":
          description: data about the user's favorites players returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerPreview'
        "401":
          description: user is not authorized
    post:
      tags:
      - Users
      - Players
      summary: save player in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "201":
          description: The player successfully saved as favorite
        "401":
          description: user is not authorized
  /users/favoriteTeams:
    get:
      tags:
      - Users
      - Teams
      summary: Return the favorite team that were saved by user
      responses:
        "200":
          description: data about the user's favorites teams returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        "401":
          description: user is not authorized
    post:
      tags:
      - Users
      - Teams
      summary: save team in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        "201":
          description: The team successfully saved as favorite
        "401":
          description: user is not authorized
  /teams/teamFullDetails/{teamId}:
    get:
      tags:
      - Teams
      summary: get full deatils about a team
      description: useful for team page
      parameters:
      - name: teamId
        in: path
        description: team's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "404":
          description: teamId is not exists
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: ladygaga
        firstname:
          type: string
          description: user's first name
          example: Stefani
        lastname:
          type: string
          description: user's last name
          example: Germanotta
        country:
          type: string
          description: user's country
          example: USA
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins between 5 to 10 chars, at least one of them is a number and a special char
          format: password
          example: lady@56
        email:
          pattern: email
          type: string
          description: user's email
          example: ladygaga@gmail.com
        image-url:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins letters only
          example: naorbe
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins at least one number and one special char
          format: password
          example: naor@55
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: 2020/2021
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
    PlayerPreview:
      type: object
      properties:
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: København
    Team:
      type: object
      properties:
        name:
          type: string
          description: team name
          example: København
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerPreview'
    body:
      type: object
      properties:
        playerId:
          type: string
          description: player's id which the user saved
          example: "85"
    body_1:
      type: object
      properties:
        playerId:
          type: string
          description: team's id which the user saved
          example: "85"
