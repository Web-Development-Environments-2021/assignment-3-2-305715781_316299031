openapi: 3.0.0
info:
  title: api
  description: API for  project
  version: 1.0.0
servers:
- url: /
tags:
- name: Admin
- name: Users
- name: Teams
- name: Players
- name: Games
- name: Auth
- name: League
  description: All user function
paths:
  /register/:
    post:
      tags:
      - Auth
      summary: This is the register, A new user from th client is added to the server
      description: A JSON object contains all the detalis about the new user
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: bad input parameter
  /login/:
    post:
      tags:
      - Auth
      summary: This is the login, a user trining to connect
      description: A JSON object contains all the detalis about the new user
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        required: true
      responses:
        "200":
          description: The  user has been login successfully
        "401":
          description: bad input parameter
  /logout/:
    post:
      tags:
      - Auth
      description: This is the logOut
      responses:
        "200":
          description: logout succeeded
          headers:
            delete-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: ""
  /users/favoritePlayers/:
    get:
      tags:
      - Users
      - Players
      summary: my favorite players
      description: By passing in the appropriate options, you can get your favorite players that store in the DB.
      responses:
        "201":
          description: get my favorite successfuly
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/favoritPlayer'
        "404":
          description: my favorites not found
    post:
      tags:
      - Users
      - Players
      description: add the player to my favorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/favoritPlayer'
      responses:
        "200":
          description: A new player has been iserted to favorites successfuly
        "401":
          description: already in favorites
        "404":
          description: bad input parameter
  /users/favoriteTeams/:
    get:
      tags:
      - Users
      - Teams
      summary: my favorite teams
      description: By passing in the appropriate options, you can get your favorite teams that store in the DB.
      responses:
        "201":
          description: get my favorite successfuly
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/favoritTeam'
        "404":
          description: my favorites not found
    post:
      tags:
      - Users
      - Teams
      description: add the team to my favorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/favoritTeam'
      responses:
        "200":
          description: A new team has been iserted to favorites successfuly
        "401":
          description: already in favorites
        "404":
          description: bad input parameter
  /users/favoriteGames/:
    get:
      tags:
      - Users
      - Games
      summary: my top 3 favorite games
      description: By passing in the appropriate options, you can get your favorite games that store in the DB.
      responses:
        "201":
          description: get my favorite successfuly
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/favoritGame'
        "404":
          description: my favorites not found
    post:
      tags:
      - Users
      - Games
      description: add the game to my favorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/favoritGame'
      responses:
        "200":
          description: A new game has been iserted to favorites successfuly
        "401":
          description: already in favorites
        "404":
          description: bad input parameter
  /guest/Search/team/{searchname}:
    get:
      tags:
      - Guest
      - Teams
      summary: search team by name
      description: A JSON object contains all the detalis about the team
      parameters:
      - name: searchname
        in: path
        description: search by name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Succesfully found the team
        "401":
          description: bad input parameter
  /guest/search/player/{searchname}:
    get:
      tags:
      - Guest
      - Players
      summary: search player by name
      description: A JSON object contains all the detalis about the player
      parameters:
      - name: searchname
        in: path
        description: search by name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Succesfully found the player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerPreview'
        "401":
          description: bad input parameter
  /guest/search/player/filter/{searchfilter}:
    get:
      tags:
      - Guest
      - Players
      summary: search player by name and filter it
      description: A JSON object contains all the detalis about the player
      parameters:
      - name: searchfilter
        in: path
        description: search by name
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/filterplayer'
      responses:
        "200":
          description: Succesfully found the player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerPreview'
        "401":
          description: bad input parameter
  /admin/eventSchedule/:
    post:
      tags:
      - Admin
      summary: eventSchedule
      description: A JSON object contains all the detalis about the events from a game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventSchedule'
        required: true
      responses:
        "200":
          description: A new eventSchedule to game() has been iserted to the web
        "404":
          description: bad input parameter
  /admin/AddResult/:
    post:
      tags:
      - Admin
      summary: add result the game
      description: A JSON object contains all the detalis about the result of the game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddResult'
        required: true
      responses:
        "200":
          description: A new result to game  has been inserted
        "403":
          description: game id not exist
        "404":
          description: bad input parameter
  /admin/addNewGame/:
    post:
      tags:
      - Admin
      summary: Add new game to the seesion and league
      description: A JSON object contains all the detalis about the new game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNewGame'
        required: true
      responses:
        "201":
          description: Game Added
        "401":
          description: The teams cant play on that date, its taken
  /teams/teamFullDetails/{teamId}:
    get:
      tags:
      - Teams
      summary: get full deatils about a team
      description: useful for team page
      parameters:
      - name: teamId
        in: path
        description: team's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "404":
          description: teamId is not exists

  /game/gameTable/:
    get:
      tags:
      - Games
      summary: get full game table
      description: useful for mangment league page
      responses:
        "200":
          description: data about the games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addNewGame'
        "404":
          description: table not exist

  /game/gameDetails/{game_id}:
    get:
      tags:
      - Games
      summary: get full deatils about a game
      description: useful for game page
      parameters:
      - name: game_id
        in: path
        description: game's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameDetails'
        "404":
          description: game_id is not exists
          
  /game/getTeamFutureGames/{team_id}:
    get:
      tags:
      - Games
      summary: get team all future games info 
      description: useful for game page
      parameters:
      - name: team_id
        in: path
        description: team's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about team future games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameDetails'
        "404":
          description: team_id is not exists

  /game/getTeamOldeGames/{team_id}:
    get:
      tags:
      - Games
      summary: get team all old games info 
      description: useful for game page
      parameters:
      - name: team_id
        in: path
        description: team's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about team old games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameDetails'
        "404":
          description: team_id is not exists

  /league/getLeagueFutureGames/:
    get:
      tags:
      - League
      summary: get  all future games in the league
      description: useful for league page
      responses:
        "200":
          description: data about league future games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameDetails'
        "404":
          description: There isn't future games in the league

  /league/getLeagueOldGames/:
    get:
      tags:
      - League
      summary: getleague old games info
      description: useful for league page    
      responses:
        "200":
          description: data about league old games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameDetails'
        "404":
          description: There isn't old games in the league

  /league/getNextScheduleGame/:
    get:
      tags:
      - League
      summary: get league next schedule game
      description: useful for league page   
      responses:
        "200":
          description: data about the next game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameDetails'
        "404":
          description: There isn't future games in the league
          
 

components:
  schemas:
    register:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username contains between 3 to 8 letters only
          example: NicoleKenig
        firstname:
          type: string
          description: the user first name
          example: Nicole
        lastname:
          type: string
          description: the user last name
          example: Kenig
        country:
          type: string
          description: the user country
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password contains between 5 to 10 chars, at least on of them is a number and a special char
          format: password
          example: joanne@26
        confirmation password:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password contains between 5 to 10 chars, at least on of them is a number and a special char
          format: password
          example: joanne@26
        email:
          type: string
          description: the user email
          format: email
          example: ladygaga@gmail.com
        imageurl:
          type: string
          description: URL for the user's image
          format: URL
          example: https://cloudinary.com/ladygaga
    login:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username contains between 3 to 8 letters only
          example: nicole
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: |
            password contains between 5 to 10 chars, at least on of them is a number and a special char
          format: password
          example: "123456"
    
    favoritPlayer:
      type: object
      properties:
        player_id:
          type: integer
          description: id of the player
          example: 90
    favoritTeam:
      type: object
      properties:
        team_id:
          type: integer
          description: id of the team
          example: 85

    favoritGame:
      type: object
      properties:
        game_id:
          type: integer
          description: Game id number
          example: 3
        localteam:
          type: string
          description: Home team name
          example: AGF
        visitorteam:
          type: string
          description: Away team name
          example: Ronders
        date:
          type: string
          format: date-time
          description: the game date
          example: '2021-07-15 20:00:00'
        fild:
          type: string
          description: where the game will take place, the estadion name
          example: Denmark Stadium
        mainJudge:
          type: string
          description: judge name
          example: Bar Natan
        secondaryjudge:
          type: string
          description: judge name
          example: Adler Ziv
    
    # SearchTeam:
    #   type: object
    #   properties:
    #     name:
    #       type: string
    #       description: Team name
    #       example: Macabi Netanya
    # SearchPlayer:
    #   type: object
    #   properties:
    #     name:
    #       type: string
    #       description: Player fullname/lastname/firstname
    #       example: itzik zohar

    eventSchedule:
      type: object
      properties:
        game_id:
          type: integer
          description: An event belongs to the game
          example: 234565
        date:
          type: string
          description: time stemp
          example: '2019-07-21 20:23:00'
        minute:
          type: integer
          description: when its happend in minute
        EventDescription:
          type: string
          description: what happend in the event
          example: Jovany rosso put goal at by passs he got from....
    
    AddResult:
      type: object
      properties:
        game_id:
          type: integer
        localteam_score:
          type: integer
          example: 4
        visitoreteam_score:
          type: integer
          example: 5
    
    PlayerPreview:
      type: object
      properties:
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: København
    Team:
      type: object
      properties:
        name:
          type: string
          description: team name
          example: København
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerPreview'
    filterplayer:
      type: object
      properties:
        name:
          type: string
          description: player name
          example: haim revivo
        position:
          type: integer
          description: player postion between 1-12    0- it's mean no filter by position
          example: 0
        teamname:
          type: string
          description: team name
          example: tel aviv
    addNewGame:
      type: object
      properties:
        localteam:
          type: string
          description: Home team name
          example: Hapoel Beer-Sheva
        visitorteam:
          type: string
          description: Away team name
          example: Macabi Haifa
        date:
          type: string
          format: date-time	
          description: the game date
          example: '2022-02-21 00:14:00'
        fild:
          type: string
          description: where the game will take place, the estadion name
          example: Beer-Sheva estadion
        mainJudge:
          type: string
          description: judge name
          example: Maradona
        secondaryjudge:
          type: string
          description: judge name
          example: Barak Obama
         
    # gameEvent:
    #   type: object
    #   properties:
    #     date:
    #       type: string
    #       format: date-time	
    #       description: the game date
    #       example: '2022-02-21 00:14:00'
    #     description:
    #       type: string
    #       description: the spesific game event 
    #       example: 'Yellow card Bahattin Aygün'
    #     game_id:
    #       type: integer
    #       description: game is number
    #       example: 1
    #     minute:
    #       type: integer
    #       description: The minute of the game that the event happened
    #       example: 30
          
          
    gameDetails:
      type: object
      properties:
        game_id:
          type: integer
          description: Game id number
          example: 1
        localteam:
          type: string
          description: Home team name
          example: Hapoel Beer-Sheva
        visitorteam:
          type: string
          description: Away team name
          example: Macabi Haifa
        date:
          type: string
          format: date-time
          description: the game date
          example: '2019-08-02 20:00:00'
        fild:
          type: string
          description: where the game will take place, the estadion name
          example: Beer-Sheva estadion
        mainJudge:
          type: string
          description: judge name
          example: Maradona
        secondaryjudge:
          type: string
          description: judge name
          example: Barak Obama
        game_events:
          type: object
          description: game event log array
          example: [{game_id: 2, date: ' 2019-08-02 20:00:00', minute: 30, description: 'Yellow card Bahattin Aygün'}]
            
    
        
        
    
        
            
            
          
